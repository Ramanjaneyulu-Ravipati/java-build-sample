name: $(Date:dd-MM-yyyy)$(Rev:.r)
trigger:
- master
- develop
- qa
pr:
- master
- develop
- qa

pool:
  vmImage: 'ubuntu-latest'

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  maven_sonarqube_plugins: 'org.sonarsource.scanner.maven:sonar-maven-plugin:3.6.0.1398:sonar'
  maven_buildhelper_plugins: 'org.codehaus.mojo:build-helper-maven-plugin:3.2.0:build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion} versions:commit'

steps:
- task: Cache@2
  inputs:
    key: 'maven | "$(Agent.OS)" | **/pom.xml'
    restoreKeys: |
      maven | "$(Agent.OS)"
      maven
    path: $(MAVEN_CACHE_FOLDER)
  displayName: Cache Maven local repo

- task: SonarQubePrepare@4
  inputs:
    SonarQube: 'ado_sonar_maerskdev_net_tmp'
    scannerMode: 'Other'
    #extraProperties: |
    #  sonar.language=java
    #  sonar.java.binaries=target/classes

- script: |
    ./mvnw -B -e clean package $(maven_sonarqube_plugins) 
  env:
    MAVEN_OPTS: $(MAVEN_OPTS)
  displayName: 'Maven Package'

#- task: SonarQubeAnalyze@4
#  displayName: 'Sonarqube Analysis'

#- task: SonarQubePublish@4
#  inputs:
#    pollingTimeoutSec: '300'
#  displayName: 'Sonarqube Publish'
- task: CopyFiles@2
  inputs:
    SourceFolder: 'target'
    Contents: '*.jar'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    OverWrite: true
      
- publish: '$(Build.ArtifactStagingDirectory)'
  artifact: drop

